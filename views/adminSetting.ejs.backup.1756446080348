<!-- Halaman Tab Setting Admin -->
<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <title>Admin Setting</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    <link href="/css/responsive-admin.css" rel="stylesheet">
    <style>
        body { background: #f5f6fa; }

        .main-content { padding: 32px 24px; }
        .card { border: none; border-radius: 12px; box-shadow: 0 2px 8px rgba(0,0,0,0.04); }
        .form-label { font-weight: 600; }
        .form-section { 
            background: white; 
            border-radius: 16px; 
            padding: 25px; 
            margin-bottom: 20px;
            height: 100%;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        .qr-container {
            max-width: 100%;
            margin: 0 auto;
            padding: 20px;
            border-radius: 12px;
        }
        #wa-qr-container {
            min-height: 250px;
            align-items: center;
        }
        #wa-qr-div {
            padding: 10px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        .command-card {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }
        .command-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }
        .command-title {
            font-weight: 600;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .command-list {
            font-size: 0.85rem;
            line-height: 1.4;
        }
        .command-list code {
            background: #e9ecef;
            padding: 2px 4px;
            border-radius: 3px;
            font-size: 0.8rem;
        }
        .logo-preview {
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            background: #f8f9fa;
        }
        .logo-preview img {
            max-width: 100%;
            height: auto;
            border-radius: 4px;
        }
        .logo-preview img[src$=".svg"] {
            width: auto;
            height: auto;
            max-width: 100%;
            max-height: 120px;
        }
        .status-badge {
            font-size: 0.9rem;
            padding: 8px 12px;
        }
        .alert-custom {
            border-radius: 8px;
            border-left: 4px solid;
        }
        .alert-warning {
            border-left-color: #ffc107;
        }
        .alert-info {
            border-left-color: #17a2b8;
        }
        
        /* Mobile responsive fixes */
        @media (max-width: 767.98px) {
            .main-content {
                margin-top: 70px !important; /* Extra space for mobile navbar */
                padding-top: 10px !important;
                z-index: 1;
            }
            .card {
                z-index: 1;
            }
            /* Pastikan cards tidak overlap dengan mobile navbar */
            .row.mb-4:first-of-type {
                margin-top: 10px;
            }
            /* Responsive notification positioning */
            #restartNotif {
                top: 80px !important; /* Below mobile navbar */
                right: 10px !important;
                left: 10px !important;
                width: auto !important;
            }
        }
    </style>
</head>
<body>
<div class="container-fluid">
    <div class="row">
        <!-- Include Responsive Admin Sidebar -->
        <%- include('partials/admin-responsive-sidebar', { page: 'setting', settings: settings }) %>
        
        <main class="col-md-10 main-content ms-sm-auto">
            <h3 class="mb-4">Pengaturan Sistem</h3>
            
            <div class="row">
                <!-- Kolom 1: Form Settings -->
                <div class="col-lg-4 mb-4">
                    <div class="form-section">
                        <h5 class="mb-3">
                            <i class="bi bi-gear text-primary"></i> Pengaturan Sistem
                        </h5>
                        <form id="settingsForm">
                            <div id="settingsFields">
                                <!-- Semua field dari settings.json akan di-render di sini oleh JS -->
                            </div>
                            <div id="settingsSuccess" class="alert alert-success d-none" role="alert"></div>
                            <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-3">
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-save"></i> Simpan Perubahan
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Kolom 2: WhatsApp Gateway -->
                <div class="col-lg-4 mb-4">
                    <div class="form-section">
                        <h5 class="mb-3">
                            <i class="bi bi-whatsapp text-success"></i> WhatsApp Gateway
                        </h5>
                        
                        <!-- Status WhatsApp -->
                        <div class="text-center mb-3">
                            <div id="wa-status" class="mb-2"></div>
                            <div id="wa-qr-container" class="d-flex justify-content-center mb-2 d-none">
                                <div class="position-relative">
                                    <img id="wa-qr" src="#" alt="QR Code WhatsApp" class="img-fluid rounded shadow" style="max-width: 100%; height: auto; display: none;">
                                    <div id="wa-qr-div" class="d-flex justify-content-center"></div>
                                </div>
                            </div>
                            <div class="d-flex gap-2 justify-content-center">
                                <button class="btn btn-success btn-sm" id="btnRefreshQR">
                                    <i class="bi bi-arrow-clockwise"></i> Refresh QR
                                </button>
                                <button class="btn btn-outline-danger btn-sm" id="btnDeleteSession">
                                    <i class="bi bi-trash"></i> Hapus Session
                                </button>
                            </div>
                        </div>
                        
                        <!-- Peringatan Scan QR Code -->
                        <div class="alert alert-warning alert-custom mb-3">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-exclamation-triangle-fill me-2 mt-1"></i>
                                <div>
                                    <strong>⚠️ PENTING!</strong>
                                    <br>
                                    <small>
                                        Gunakan nomor WhatsApp <strong>BUKAN nomor admin</strong> untuk scan QR code ini. 
                                        Nomor yang digunakan untuk scan akan menjadi bot yang menerima dan memproses pesan WhatsApp.
                                        <br><br>
                                        <strong>Nomor Admin:</strong> Hanya untuk mengirim perintah, tidak untuk scan QR code.
                                    </small>
                                </div>
                            </div>
                        </div>

                        <!-- WhatsApp Groups Management -->
                        <div class="mt-4">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-people-fill"></i> WhatsApp Groups Management
                            </h6>

                            <div class="mb-3">
                                <div class="d-flex gap-2 flex-wrap">
                                    <button class="btn btn-success btn-sm" id="btnLoadGroups">
                                        <i class="bi bi-arrow-clockwise"></i> Load Groups
                                    </button>
                                    <button class="btn btn-outline-primary btn-sm" id="btnRefreshGroups">
                                        <i class="bi bi-refresh"></i> Refresh
                                    </button>
                                    <button class="btn btn-outline-info btn-sm" id="btnTestConnection">
                                        <i class="bi bi-wifi"></i> Test Connection
                                    </button>
                                </div>
                            </div>

                            <!-- WhatsApp Groups Status -->
                            <div id="waGroupsStatus" class="mb-3">
                                <div class="alert alert-info">
                                    <i class="bi bi-info-circle"></i> <strong>Cara menggunakan:</strong>
                                    <br>• Klik "Load Groups" untuk melihat daftar grup WhatsApp
                                    <br>• Pastikan WhatsApp sudah terkoneksi (lihat status di atas)
                                    <br>• Pastikan bot sudah ditambahkan ke grup yang diinginkan
                                    <br><br><strong>Jika tidak ada grup yang ditemukan:</strong>
                                    <br>• Klik "Test Connection" untuk memeriksa status koneksi
                                    <br>• Buka console browser (F12) untuk melihat informasi debug
                                    <br>• Pastikan bot sudah menjadi admin di grup
                                    <br>• Restart aplikasi jika diperlukan
                                </div>
                            </div>

                            <!-- WhatsApp Groups List -->
                            <div id="waGroupsList" class="mb-3" style="display: none;">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h6 class="mb-0"><i class="bi bi-people-fill"></i> Daftar Grup WhatsApp</h6>
                                        <span class="badge bg-primary" id="groupsCount">0</span>
                                    </div>
                                    <div class="card-body p-0">
                                        <div id="groupsContainer">
                                            <!-- Groups will be loaded here -->
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Group Detail Modal -->
                            <div class="modal fade" id="groupDetailModal" tabindex="-1">
                                <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title"><i class="bi bi-people-fill"></i> Detail Grup WhatsApp</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body" id="groupDetailContent">
                                            <!-- Group detail will be loaded here -->
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                                            <button type="button" class="btn btn-primary" id="btnCopyGroupId">Copy Group ID</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Perintah Admin WhatsApp -->
                        <div class="mt-4">
                            <h6 class="text-primary mb-3">
                                <i class="bi bi-info-circle"></i> Perintah Admin WhatsApp
                            </h6>
                            
                            <!-- GenieACS Commands -->
                            <div class="command-card mb-2">
                                <div class="command-title text-success">
                                    <i class="bi bi-hdd-network"></i> GenieACS
                                </div>
                                <div class="command-list">
                                    <ul class="list-unstyled mb-0 small">
                                        <li><code>devices</code> - Daftar perangkat</li>
                                        <li><code>cekall</code> - Cek semua perangkat</li>
                                        <li><code>search [nomor]</code> - Cari perangkat</li>
                                        <li><code>cek [nomor]</code> - Cek status ONU</li>
                                        <li><code>cekstatus [nomor]</code> - Cek status pelanggan</li>
                                        <li><code>admincheck [nomor]</code> - Cek perangkat admin</li>
                                        <li><code>gantissid [nomor] [ssid]</code> - Ubah SSID</li>
                                        <li><code>gantipass [nomor] [pass]</code> - Ubah password</li>
                                        <li><code>reboot [nomor]</code> - Restart ONU</li>
                                        <li><code>factory reset [nomor]</code> - Reset factory</li>
                                        <li><code>refresh</code> - Refresh data perangkat</li>
                                        <li><code>tag [nomor] [tag]</code> - Tambah tag pelanggan</li>
                                        <li><code>untag [nomor] [tag]</code> - Hapus tag</li>
                                        <li><code>tags [nomor]</code> - Lihat tags</li>
                                        <li><code>adminssid [nomor] [ssid]</code> - Admin ubah SSID</li>
                                        <li><code>adminrestart [nomor]</code> - Admin restart ONU</li>
                                        <li><code>adminfactory [nomor]</code> - Admin factory reset</li>
                                        <li><code>confirm admin factory reset [nomor]</code> - Konfirmasi factory reset</li>
                                    </ul>
                                </div>
                            </div>

                            <!-- PPPoE Commands -->
                            <div class="command-card mb-2">
                                <div class="command-title text-primary">
                                    <i class="bi bi-router"></i> PPPoE & Mikrotik
                                </div>
                                <div class="command-list">
                                    <ul class="list-unstyled mb-0 small">
                                        <li><code>interfaces</code> - Daftar interface</li>
                                        <li><code>interface [nama]</code> - Detail interface</li>
                                        <li><code>enableif [nama]</code> - Aktifkan interface</li>
                                        <li><code>disableif [nama]</code> - Nonaktifkan interface</li>
                                        <li><code>ipaddress</code> - Alamat IP</li>
                                        <li><code>routes</code> - Tabel routing</li>
                                        <li><code>dhcp</code> - DHCP leases</li>
                                        <li><code>ping [ip] [count]</code> - Test ping</li>
                                        <li><code>logs [topics] [count]</code> - Log Mikrotik</li>
                                        <li><code>firewall [chain]</code> - Status firewall</li>
                                        <li><code>users</code> - Daftar semua user</li>
                                        <li><code>profiles [type]</code> - Daftar profile</li>
                                        <li><code>identity [nama]</code> - Info router</li>
                                        <li><code>clock</code> - Waktu router</li>
                                        <li><code>resource</code> - Info resource</li>
                                        <li><code>reboot</code> - Restart router</li>
                                        <li><code>confirm restart</code> - Konfirmasi restart</li>
                                        <li><code>addtag [device_id] [nomor]</code> - Tambah tag perangkat</li>
                                    </ul>
                                </div>
                            </div>

                            <!-- Hotspot & PPPoE Management -->
                            <div class="command-card mb-2">
                                <div class="command-title text-warning">
                                    <i class="bi bi-wifi"></i> Hotspot & PPPoE Management
                                </div>
                                <div class="command-list">
                                    <ul class="list-unstyled mb-0 small">
                                        <li><code>vcr [user] [profile] [nomor]</code> - Buat voucher</li>
                                        <li><code>hotspot</code> - User hotspot aktif</li>
                                        <li><code>pppoe</code> - User PPPoE aktif</li>
                                        <li><code>offline</code> - User PPPoE offline</li>
                                        <li><code>addhotspot [user] [pass] [profile]</code> - Tambah user</li>
                                        <li><code>addpppoe [user] [pass] [profile] [ip]</code> - Tambah PPPoE</li>
                                        <li><code>setprofile [user] [profile]</code> - Ubah profile</li>
                                        <li><code>delhotspot [username]</code> - Hapus user hotspot</li>
                                        <li><code>delpppoe [username]</code> - Hapus user PPPoE</li>
                                        <li><code>addpppoe_tag [user] [nomor]</code> - Tambah tag PPPoE</li>
                                        <li><code>member [username] [profile] [nomor]</code> - Tambah member</li>
                                        <li><code>list</code> - Daftar semua user</li>
                                        <li><code>remove [username]</code> - Hapus user (generic)</li>
                                        <li><code>addadmin [nomor]</code> - Tambah nomor admin</li>
                                        <li><code>removeadmin [nomor]</code> - Hapus nomor admin</li>
                                    </ul>
                                </div>
                            </div>

                            <!-- Sistem & Admin -->
                            <div class="command-card mb-2">
                                <div class="command-title text-info">
                                    <i class="bi bi-shield-check"></i> Sistem & Admin
                                </div>
                                <div class="command-list">
                                    <ul class="list-unstyled mb-0 small">
                                        <li><code>otp [nomor]</code> - Kirim OTP</li>
                                        <li><code>status</code> - Status sistem</li>
                                        <li><code>logs</code> - Log aplikasi</li>
                                        <li><code>restart</code> - Restart aplikasi</li>
                                        <li><code>debug resource</code> - Debug resource</li>
                                        <li><code>checkgroup</code> - Cek status group</li>
                                        <li><code>setadmin [nomor]</code> - Set nomor admin</li>
                                        <li><code>settechnician [nomor]</code> - Set nomor teknisi</li>
                                        <li><code>setheader [teks]</code> - Set header pesan</li>
                                        <li><code>setfooter [teks]</code> - Set footer pesan</li>
                                        <li><code>setgenieacs [url] [user] [pass]</code> - Set GenieACS</li>
                                        <li><code>setmikrotik [host] [port] [user] [pass]</code> - Set Mikrotik</li>
                                        <li><code>genieacs stop</code> - Stop GenieACS</li>
                                        <li><code>genieacs start060111</code> - Start GenieACS</li>
                                        <li><code>admin</code> - Menu admin</li>
                                        <li><code>help</code> - Bantuan perintah</li>
                                        <li><code>ya/iya/yes</code> - Konfirmasi ya</li>
                                        <li><code>tidak/no/batal</code> - Konfirmasi tidak</li>
                                        <li><code>addwan [interface]</code> - Tambah WAN</li>
                                    </ul>
                                </div>
                            </div>

                            <!-- WiFi & Layanan -->
                            <div class="command-card mb-0">
                                <div class="command-title text-secondary">
                                    <i class="bi bi-wifi"></i> WiFi & Layanan
                                </div>
                                <div class="command-list">
                                    <ul class="list-unstyled mb-0 small">
                                        <li><code>info wifi</code> - Info WiFi pelanggan</li>
                                        <li><code>info</code> - Info layanan</li>
                                        <li><code>gantiwifi [ssid]</code> - Ganti nama WiFi</li>
                                        <li><code>gantipass [password]</code> - Ganti password WiFi</li>
                                        <li><code>speedtest</code> - Test kecepatan</li>
                                        <li><code>diagnostic</code> - Diagnostik perangkat</li>
                                        <li><code>history</code> - Riwayat perangkat</li>
                                        <li><code>menu</code> - Menu utama</li>
                                        <li><code>factory reset</code> - Reset factory (pelanggan)</li>
                                        <li><code>confirm factory reset</code> - Konfirmasi factory reset</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Kolom 3: Logo Aplikasi -->
                <div class="col-lg-4 mb-4">
                    <div class="form-section">
                        <h5 class="mb-3">
                            <i class="bi bi-image text-success"></i> Logo Aplikasi
                        </h5>
                        <form id="logoUploadForm" enctype="multipart/form-data">
                            <div class="mb-3">
                                <label class="form-label">Upload Logo Baru</label>
                                <input type="file" name="logo" accept="image/*,.svg" class="form-control" required>
                                <div class="form-text">Format: PNG, JPG, JPEG, GIF, BMP, WEBP, SVG. Maksimal 5MB.</div>
                            </div>
                            <button type="submit" class="btn btn-success btn-sm">
                                <i class="bi bi-upload"></i> Upload Logo
                            </button>
                        </form>
                        <div class="logo-preview mt-3">
                            <label class="form-label">Logo Saat Ini:</label>
                            <img id="logoPreview" src="/img/<%= typeof settings !== 'undefined' && settings.logo_filename ? settings.logo_filename : 'logo.png' %>?ts=<%= Date.now() %>" alt="Logo" style="max-width:200px;max-height:120px;">
                        </div>
                        <!-- Keterangan Donasi Masjid (di dalam section logo) -->
                        <div class="alert alert-info mt-3" style="border-radius: 10px; font-size: 1rem;">
                            <strong>Rekening Donasi Pembangunan Masjid</strong><br>
                            <span style="font-size:1.2em; letter-spacing:2px; font-weight:bold;">4206 0101 2214 534</span><br>
                            <span>BRI a.n. DKM BAITUR ROHMAN</span><br>
                            <hr class="my-2">
                            <span class="d-block">Desa Ujunggebang Kecamatan Sukra Kabupaten Indramayu Jawa Barat</span>
                            <span class="d-block mt-2"><strong>Konfirmasi donasi:</strong><br>
                                081947215703 (Ust. WARJAYA)<br>
                                085210939803 (Ust. FIKI)<br>
                                082130257144 (Ust. KARONI)
                            </span>
                            <span class="d-block mt-2">Terima kasih atas partisipasi dan dukungan Anda 🙏</span>
                        </div>

                        <!-- Kalkulator Burst Limit -->
                        <div class="mt-4">
                            <h5 class="mb-3"><i class="bi bi-calculator"></i> Kalkulator Burst Limit</h5>
                            <p class="small text-muted mb-3">Untuk profil Hotspot atau PPPoE.</p>
                            
                            <!-- Rate Limit -->
                            <label class="form-label small fw-bold">Rate Limit (dan Threshold)</label>
                            <div class="row g-2 mb-3">
                                <div class="col-7">
                                    <input type="number" class="form-control form-control-sm" id="uploadRate" placeholder="cth: 100">
                                </div>
                                <div class="col-5">
                                    <select class="form-select form-select-sm" id="uploadUnit">
                                        <option value="k" selected>Kbps</option>
                                        <option value="M">Mbps</option>
                                    </select>
                                </div>
                                <div class="col-7">
                                    <input type="number" class="form-control form-control-sm" id="downloadRate" placeholder="cth: 100">
                                </div>
                                <div class="col-5">
                                    <select class="form-select form-select-sm" id="downloadUnit">
                                        <option value="k">Kbps</option>
                                        <option value="M" selected>Mbps</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Burst Limit -->
                            <label class="form-label small fw-bold">Burst Limit</label>
                            <div class="row g-2 mb-3">
                                <div class="col-7">
                                    <input type="number" class="form-control form-control-sm" id="uploadBurstRate" placeholder="cth: 100">
                                </div>
                                <div class="col-5">
                                    <select class="form-select form-select-sm" id="uploadBurstUnit">
                                        <option value="k" selected>Kbps</option>
                                        <option value="M">Mbps</option>
                                    </select>
                                </div>
                                <div class="col-7">
                                    <input type="number" class="form-control form-control-sm" id="downloadBurstRate" placeholder="cth: 100">
                                </div>
                                <div class="col-5">
                                    <select class="form-select form-select-sm" id="downloadBurstUnit">
                                        <option value="k">Kbps</option>
                                        <option value="M" selected>Mbps</option>
                                    </select>
                                </div>
                            </div>

                            <!-- Burst Time -->
                            <div class="mb-3">
                                <label for="burstTime" class="form-label small fw-bold">Burst Time (detik)</label>
                                <input type="number" class="form-control form-control-sm" id="burstTime" value="8" placeholder="cth: 8">
                            </div>

                            <!-- Hasil -->
                            <div>
                                <label for="burstResult" class="form-label small fw-bold">Hasil</label>
                                <div class="input-group mb-3">
                                    <input type="text" class="form-control form-control-sm bg-light" id="burstResult" readonly placeholder="Hasil akan muncul di sini">
                                    <button class="btn btn-outline-secondary btn-sm" type="button" id="copyBurstBtn">
                                        <i class="bi bi-clipboard"></i>
                                    </button>
                                </div>
                                <button class="btn btn-primary btn-sm w-100" type="button" id="generateBurstLimit">
                                    <i class="bi bi-lightning-charge"></i> Generate
                                </button>
                            </div>
                        </div>

                        <hr class="my-4">
<!-- VPS & MikroTik WireGuard + GenieACS Generator -->
<div class="mt-4">
    <h5 class="mb-3"><i class="bi bi-server"></i> Generator Konfigurasi VPS & MikroTik</h5>
    <p class="small text-muted mb-3">Generate skrip untuk menghubungkan VPS dan MikroTik dengan WireGuard dan GenieACS.</p>
    
    <div class="row g-3 mb-3">
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-primary text-white">
                    <i class="bi bi-hdd-rack"></i> Konfigurasi VPS
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label small fw-bold">IP Publik VPS</label>
                        <input type="text" class="form-control form-control-sm" id="vpsPublicIp" placeholder="contoh: 123.123.123.123">
                    </div>
                    <div class="mb-3">
                        <label class="form-label small fw-bold">Interface Jaringan (biasanya eth0 atau ens3)</label>
                        <input type="text" class="form-control form-control-sm" id="vpsInterface" value="eth0">
                    </div>
                    <div class="mb-3">
                        <label class="form-label small fw-bold">Port WireGuard</label>
                        <input type="number" class="form-control form-control-sm" id="wgPort" value="51820">
                    </div>
                    <button class="btn btn-primary btn-sm w-100" id="generateVpsScript">
                        <i class="bi bi-file-earmark-code"></i> Generate Skrip VPS
                    </button>
                    <button class="btn btn-success btn-sm w-100 mt-2" id="downloadVpsScript" disabled>
                        <i class="bi bi-download"></i> Unduh Skrip VPS
                    </button>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card h-100">
                <div class="card-header bg-success text-white">
                    <i class="bi bi-router"></i> Konfigurasi MikroTik
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label small fw-bold">IP Lokal MikroTik (WireGuard)</label>
                        <input type="text" class="form-control form-control-sm" id="mikrotikLocalIp" value="10.10.10.2">
                    </div>
                    <div class="mb-3">
                        <label class="form-label small fw-bold">IP VPS (WireGuard)</label>
                        <input type="text" class="form-control form-control-sm" id="vpsLocalIp" value="10.10.10.1">
                    </div>
                    <div class="mb-3">
                        <label class="form-label small fw-bold">Subnet Jaringan</label>
                        <input type="text" class="form-control form-control-sm" id="networkSubnet" value="10.10.10.0/24">
                    </div>
                    <button class="btn btn-success btn-sm w-100" id="generateMikrotikScript">
                        <i class="bi bi-file-earmark-code"></i> Generate Skrip MikroTik
                    </button>
                    <button class="btn btn-success btn-sm w-100 mt-2" id="downloadMikrotikScript" disabled>
                        <i class="bi bi-download"></i> Unduh Skrip MikroTik
                    </button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span><i class="bi bi-terminal"></i> Skrip Hasil Generate</span>
                    <button class="btn btn-sm btn-outline-secondary" id="copyAllScripts">
                        <i class="bi bi-clipboard"></i> Salin Semua
                    </button>
                </div>
                <div class="card-body p-0">
                    <pre class="mb-0 p-3 bg-light" id="generatedScript" style="min-height: 200px; max-height: 400px; overflow-y: auto;">
Pilih opsi di atas untuk men-generate skrip...
                    </pre>
                </div>
            </div>
        </div>
    </div>
</div>

<hr class="my-4">

<!-- DHCP Option 43 Generator for GenieACS -->
<div class="mt-4">
    <h5 class="mb-3"><i class="bi bi-ethernet"></i> Generator DHCP Option 43</h5>
    <p class="small text-muted mb-3">Generate nilai hex untuk DHCP Option 43 (Vendor Specific Information) yang berisi URL GenieACS.</p>
    <div class="row g-2 mb-3">
        <div class="col-md-8">
            <label class="form-label small fw-bold" for="genieacsUrl">URL GenieACS</label>
            <div class="input-group">
                <input type="text" class="form-control form-control-sm" id="genieacsUrl" placeholder="cth: https://genieacs.example.com:7547">
                <button class="btn btn-outline-primary btn-sm" type="button" id="generateOption43">Generate</button>
            </div>
        </div>
        <div class="col-md-4">
            <label class="form-label small fw-bold">Hasil Option 43</label>
            <div class="input-group">
                <input type="text" class="form-control form-control-sm bg-light" id="option43Result" readonly>
                <button class="btn btn-outline-secondary btn-sm" type="button" id="copyOption43Btn" title="Salin ke clipboard">
                    <i class="bi bi-clipboard"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="alert alert-info small p-2 mb-0">
        <i class="bi bi-info-circle"></i> Gunakan nilai ini di MikroTik: <code>/ip dhcp-server option add name=opt43 code=43 value=0x<span id="option43Value"></span></code>
    </div>
</div>

<hr class="my-4">

<!-- Optical Splitter Attenuation Calculator -->
<div class="mt-4">
    <h5 class="mb-3"><i class="bi bi-lightning-charge"></i> Kalkulator Redaman Splitter Optik</h5>
    <p class="small text-muted mb-3">Hitung redaman splitter optik dan RX power setelah splitter. Cocok untuk OLT, FDT, FDX, dan ONT.</p>
    <div class="row g-2 mb-3">
        <div class="col-md-4 col-12">
            <label class="form-label small fw-bold" for="rxAwal">RX Awal (dBm)</label>
            <input type="number" class="form-control form-control-sm" id="rxAwal" placeholder="cth: -18">
        </div>
        <div class="col-md-4 col-12">
            <label class="form-label small fw-bold" for="splitterRatio">Rasio Splitter</label>
            <select class="form-select form-select-sm" id="splitterRatio">
                <option value="2">1:2</option>
                <option value="4">1:4</option>
                <option value="8">1:8</option>
                <option value="16">1:16</option>
                <option value="32">1:32</option>
                <option value="64">1:64</option>
            </select>
        </div>
        <div class="col-md-4 col-12">
            <label class="form-label small fw-bold" for="fiberLength">Panjang Kabel</label>
            <input type="number" class="form-control form-control-sm" id="fiberLength" placeholder="cth: 2" min="0" step="0.01">
        </div>
    </div>
    <div class="row g-2 mb-3">
        <div class="col-md-4 col-12">
            <label class="form-label small fw-bold" for="connectorCount">Jumlah Konektor</label>
            <input type="number" class="form-control form-control-sm" id="connectorCount" placeholder="cth: 4" min="0">
        </div>
        <div class="col-md-4 col-12">
            <label class="form-label small fw-bold" for="spliceCount">Jumlah Splice kabel</label>
            <input type="number" class="form-control form-control-sm" id="spliceCount" placeholder="cth: 2" min="0">
        </div>
        <div class="col-md-4 col-12">
            <label class="form-label small fw-bold" for="margin">Margin Cadangan (dB)</label>
            <input type="number" class="form-control form-control-sm" id="margin" placeholder="cth: 2" min="0" value="2">
        </div>
    </div>
    <div class="row g-2 mb-3">
        <div class="col-12 d-flex align-items-end">
            <button class="btn btn-primary btn-sm w-100" type="button" id="generateSplitterResult">
                <i class="bi bi-lightning-charge"></i> Generate
            </button>
        </div>
    </div>
    <div id="splitterResultSection" style="display:none">
        <div class="row g-2 mb-3">
            <div class="col-md-6 col-12">
                <label class="form-label small fw-bold">Redaman Splitter (dB)</label>
                <input type="text" class="form-control form-control-sm bg-light" id="splitterAttenuation" readonly placeholder="Redaman akan muncul di sini">
            </div>
            <div class="col-md-6 col-12">
                <label class="form-label small fw-bold">RX Setelah Splitter (dBm)</label>
                <input type="text" class="form-control form-control-sm bg-light" id="rxSetelahSplitter" readonly placeholder="RX setelah splitter akan muncul di sini">
            </div>
        </div>
        <div class="table-responsive mb-2">
            <table class="table table-sm table-bordered align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th>Rasio</th>
                        <th>Redaman (dB)</th>
                        <th>RX Setelah Splitter (dBm)</th>
                    </tr>
                </thead>
                <tbody id="splitterTableBody">
                    <!-- Table rows generated by JS -->
                </tbody>
            </table>
        </div>
    </div>
</div>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>
<!-- Modal Konfirmasi Restart Mikrotik -->
<div class="modal fade" id="restartMikrotikModal" tabindex="-1" aria-labelledby="restartMikrotikModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="restartMikrotikModalLabel"><i class="bi bi-arrow-repeat"></i> Konfirmasi Restart Mikrotik</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Apakah Anda yakin ingin <b>restart Mikrotik</b>?<br>Router akan reboot dan koneksi internet pelanggan akan terputus sementara.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
        <button type="button" class="btn btn-danger" id="confirmRestartMikrotik">Restart</button>
      </div>
    </div>
  </div>
</div>
<!-- Notifikasi -->
<div id="restartNotif" class="alert d-none position-fixed top-0 end-0 m-4" style="z-index:1055; min-width:300px;"></div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- Load QRCode.js from CDN -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
<script>
$(function() {
    // Performance tracking
    const loadStartTime = Date.now();
    console.log('🚀 Admin Settings page loading started');
    
    // Field yang tidak perlu ditampilkan di form
    const hiddenFields = [
        'pppoe_notifications.monitorInterval',
        'secret_key',
        'reconnect_interval',
        'log_level',
        'rx_power_notification_interval',
        'whatsapp_log_level',
        'pppoe_monitor_interval',
        'server_port',
        'whatsapp_session_path',
        'admin_enabled',
        'logo_filename',
        '_cached',
        '_dummy',
        '_error',
        '_loadTime'
    ];
    
    // Cache untuk menyimpan data settings yang sudah dimuat
    let settingsCache = null;
    let cacheTime = null;
    const CACHE_DURATION = 30000; // 30 detik
    
    // Dummy data untuk tampilan awal jika server lambat
    const dummySettings = {
        admin_username: 'admin',
        admin_password: '****',
        genieacs_url: 'http://localhost:7557',
        genieacs_username: 'admin',
        genieacs_password: '****',
        mikrotik_host: '192.168.1.1',
        mikrotik_port: '8728',
        mikrotik_user: 'admin',
        mikrotik_password: '****',
        main_interface: 'ether1',
        company_header: 'ISP Monitor',
        footer_info: 'Powered by Gembok',
        customerPortalOtp: 'false',
        otp_length: '6',
        pppoe_monitor_enable: 'true',
        rx_power_warning: '-27',
        rx_power_critical: '-30',
        whatsapp_keep_alive: 'true'
    };
    
    // Function untuk render field dengan optimasi
    function renderField(key, val) {
        if (hiddenFields.includes(key)) return ''; // Skip hidden fields
        
        let html = '';
        
        if (typeof val === 'object' && val !== null) {
            Object.keys(val).forEach(function(subkey) {
                html += renderField(key + '.' + subkey, val[subkey]);
            });
        } else {
            html += '<div class="mb-3">';
            
            if (key === 'user_auth_mode') {
                html += '<label class="form-label">Mode Autentikasi User</label>';
                html += '<div class="form-check">';
                html += '<input class="form-check-input" type="radio" name="user_auth_mode" id="auth_mode_mikrotik" value="mikrotik"'+(val==="mikrotik"?" checked":"")+'> ';
                html += '<label class="form-check-label" for="auth_mode_mikrotik">Mikrotik (RouterOS API)</label>';
                html += '</div>';
                html += '<div class="form-check">';
                html += '<input class="form-check-input" type="radio" name="user_auth_mode" id="auth_mode_radius" value="radius"'+(val==="radius"?" checked":"")+'> ';
                html += '<label class="form-check-label" for="auth_mode_radius">RADIUS (Database RADIUS)</label>';
                html += '</div>';
            } else if (typeof val === 'boolean' || val === true || val === false || val === 'true' || val === 'false') {
                var checked = (val === true || val === 'true') ? 'checked' : '';
                html += '<label class="form-label">'+key+'</label>';
                html += '<div class="form-check">';
                html += '<input class="form-check-input" type="checkbox" name="'+key+'" id="setting_'+key+'" '+checked+'> ';
                html += '<label class="form-check-label" for="setting_'+key+'">'+(checked ? 'Aktif' : 'Tidak Aktif')+'</label>';
                html += '</div>';
            } else {
                html += '<label class="form-label">'+key+'</label>';
                // Mask password fields
                const inputType = (key.includes('password') || key.includes('pass')) ? 'password' : 'text';
                html += '<input type="'+inputType+'" class="form-control" name="'+key+'" value="'+val+'">';
            }
            
            html += '</div>';
        }
        
        return html;
    }
    
    // Function untuk load settings dengan optimasi
    function loadSettings(useDummy = false) {
        const loadingStart = Date.now();
        
        if (useDummy) {
            console.log('📋 Using dummy data for fast initial display');
            renderSettings(dummySettings, true);
            return;
        }
        
        // Cek cache terlebih dahulu
        const now = Date.now();
        if (settingsCache && cacheTime && (now - cacheTime) < CACHE_DURATION) {
            console.log('⚡ Using cached settings data');
            renderSettings(settingsCache, false);
            return;
        }
        
        // Show loading indicator
        $('#settingsFields').html('<div class="text-center p-4"><i class="bi bi-hourglass-split"></i> Memuat pengaturan...</div>');
        
        // Fetch dari server dengan timeout
        const fetchTimeout = setTimeout(() => {
            console.warn('⏰ Settings loading timeout, using dummy data');
            renderSettings(dummySettings, true);
        }, 5000); // 5 detik timeout
        
        $.get('/admin/setting/data')
            .done(function(data) {
                clearTimeout(fetchTimeout);
                const loadTime = Date.now() - loadingStart;
                
                console.log(`✅ Settings loaded in ${loadTime}ms`, {
                    cached: data._cached,
                    dummy: data._dummy,
                    fieldsCount: Object.keys(data).length
                });
                
                // Update cache
                settingsCache = data;
                cacheTime = now;
                
                renderSettings(data, data._dummy || false);
                
                // Show performance info jika ada
                if (data._cached || data._dummy) {
                    const infoType = data._dummy ? 'dummy' : 'cached';
                    const infoMsg = data._dummy ? 
                        'Menggunakan data dummy (settings.json tidak tersedia)' : 
                        `Data dari cache (${data._loadTime}ms yang lalu)`;
                    
                    $('#settingsFields').prepend(`
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            <i class="bi bi-info-circle"></i> ${infoMsg}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    `);
                }
            })
            .fail(function(xhr) {
                clearTimeout(fetchTimeout);
                console.error('❌ Failed to load settings:', xhr.responseText);
                
                // Fallback to dummy data on error
                console.log('🔄 Falling back to dummy data');
                renderSettings(dummySettings, true);
                
                $('#settingsFields').prepend(`
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <i class="bi bi-exclamation-triangle"></i> Gagal memuat settings dari server. Menggunakan data dummy.
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `);
            });
    }
    
    // Function untuk render settings ke HTML
    function renderSettings(data, isDummy = false) {
        let html = '';
        
        Object.keys(data).forEach(function(key) {
            html += renderField(key, data[key]);
        });
        
        $('#settingsFields').html(html);
        
        if (isDummy) {
            // Tandai field dummy dengan styling khusus
            $('#settingsFields input').addClass('bg-light');
        }
        
        console.log(`🎨 Rendered ${Object.keys(data).length} settings fields`);
    }
    
    // Pre-load dengan dummy data untuk responsiveness
    loadSettings(true);
    
    // Setelah 100ms, load data sesungguhnya
    setTimeout(() => {
        loadSettings(false);
    }, 100);
    
    // Submit form settings dengan optimasi
    $('#settingsForm').on('submit', function(e) {
        e.preventDefault();
        
        const submitStart = Date.now();
        const submitBtn = $(this).find('button[type=submit]');
        const originalText = submitBtn.html();
        
        // Disable button dan show loading
        submitBtn.prop('disabled', true).html('<i class="bi bi-hourglass-split"></i> Menyimpan...');
        
        var formData = {};
        
        // Handle semua input dengan optimasi
        $('#settingsForm').find('input[type=text],input[type=password],input[type=checkbox],input[type=number]').each(function() {
            var name = $(this).attr('name');
            if (!name) return;
            
            if ($(this).attr('type') === 'checkbox') {
                formData[name] = $(this).is(':checked');
            } else {
                formData[name] = $(this).val();
            }
        });
        
        // Handle radio button (hanya yang checked)
        $('#settingsForm').find('input[type=radio]:checked').each(function() {
            var name = $(this).attr('name');
            if (!name) return;
            formData[name] = $(this).val();
        });
        
        $.ajax({
            url: '/admin/setting/save',
            method: 'POST',
            data: formData,
            timeout: 10000, // 10 detik timeout
            success: function(res) {
                const saveTime = Date.now() - submitStart;
                
                // Invalidate cache setelah save berhasil
                settingsCache = null;
                cacheTime = null;
                
                let successMsg = 'Pengaturan berhasil disimpan!';
                if (res.saveTime) {
                    successMsg += ` (${res.saveTime}ms)`;
                }
                if (res.fieldsCount) {
                    successMsg += ` - ${res.fieldsCount} field tersimpan`;
                }
                
                $('#settingsSuccess').removeClass('d-none').html(`
                    <i class="bi bi-check-circle"></i> ${successMsg}
                `);
                
                console.log(`✅ Settings saved successfully in ${saveTime}ms`);
                
                // Auto-hide success message
                setTimeout(function() {
                    $('#settingsSuccess').addClass('d-none');
                }, 5000);
            },
            error: function(xhr) {
                console.error('❌ Error saving settings:', xhr.responseText);
                
                let errorMsg = 'Gagal menyimpan pengaturan!';
                if (xhr.responseJSON && xhr.responseJSON.error) {
                    errorMsg = xhr.responseJSON.error;
                }
                
                alert(errorMsg);
            },
            complete: function() {
                // Restore button state
                submitBtn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    // Track total loading time
    const totalLoadTime = Date.now() - loadStartTime;
    console.log(`🏁 Admin Settings page fully loaded in ${totalLoadTime}ms`);
    // WhatsApp QR & Status
    function loadWAStatus() {
        $.ajax({
            url: '/admin/setting/wa-status',
            method: 'GET',
            dataType: 'json',
            success: function(res) {
                console.log('WA Status Response:', res); // Debug log
                
                // Update status koneksi
                if (res.connected) {
                    let statusHtml = '<span class="badge bg-success status-badge"><i class="bi bi-check-circle"></i> Terhubung';
                    if (res.phoneNumber) {
                        statusHtml += ` (${res.phoneNumber})`;
                    }
                    if (res.connectedSince) {
                        const connectedDate = new Date(res.connectedSince);
                        statusHtml += `<br><small>Terhubung sejak: ${connectedDate.toLocaleString()}</small>`;
                    }
                    statusHtml += '</span>';
                    $('#wa-status').html(statusHtml);
                    $('#wa-qr-container').addClass('d-none');
                } else {
                    $('#wa-status').html('<span class="badge bg-warning text-dark status-badge"><i class="bi bi-exclamation-triangle"></i> Belum Terhubung</span>');
                    
                    // Tampilkan QR code jika tersedia
                    if (res.qr) {
                        console.log('QR Code received, length:', res.qr.length);
                        $('#wa-qr-container').removeClass('d-none');
                        
                        // Hapus QR lama jika ada
                        $('#wa-qr').attr('src', '').hide();
                        const qrDiv = $('#wa-qr-div');
                        qrDiv.empty().show();
                        
                        try {
                            // Coba buat QR code langsung
                            new QRCode(qrDiv[0], {
                                text: res.qr,
                                width: 220,
                                height: 220,
                                colorDark: '#000000',
                                colorLight: '#ffffff',
                                correctLevel: 2
                            });
                            console.log('QR Code generated successfully');
                        } catch (e) {
                            console.error('Error generating QR code:', e);
                            // Fallback: area kosong saja, tidak tampilkan pesan apapun
                            qrDiv.html("");
                        }
                    } else {
                        console.log('No QR code received from server');
                        $('#wa-qr-container').addClass('d-none');
                        if (res.error) {
                            $('#wa-status').append(`<div class="alert alert-danger mt-2">${res.error}</div>`);
                        }
                    }
                }
            },
            error: function(xhr, status, error) {
                console.error('Error getting WhatsApp status:', error);
                const errorMsg = xhr.responseJSON && xhr.responseJSON.error ? xhr.responseJSON.error : error;
                $('#wa-status').html(`
                    <span class="badge bg-danger status-badge">
                        <i class="bi bi-x-circle"></i> Gagal memuat status
                    </span>
                    <div class="alert alert-danger mt-2">${errorMsg || 'Tidak dapat terhubung ke server'}</div>
                `);
                $('#wa-qr-container').addClass('d-none');
            }
        });
    }
    loadWAStatus();
    $('#btnRefreshQR').on('click', function(e) {
        e.preventDefault();
        $.post('/admin/setting/wa-refresh', function() {
            loadWAStatus();
        });
    });
    $('#btnDeleteSession').on('click', function(e) {
        e.preventDefault();
        if (confirm('Yakin hapus sesi WhatsApp?')) {
            $.post('/admin/setting/wa-delete', function() {
                loadWAStatus();
            });
        }
    });
    // Auto refresh status tiap 10 detik
    setInterval(loadWAStatus, 10000);
});

// ===== WHATSAPP GROUPS MANAGEMENT FUNCTIONS =====

// WhatsApp Groups Management
let currentGroups = [];

// Load WhatsApp Groups
$('#btnLoadGroups, #btnRefreshGroups').on('click', function() {
    loadWhatsAppGroups();
});

// Test WhatsApp Connection
$('#btnTestConnection').on('click', function() {
    testWhatsAppConnection();
});

async function testWhatsAppConnection() {
    try {
        const btn = $('#btnTestConnection');
        const originalText = btn.html();

        btn.prop('disabled', true).html('<i class="bi bi-hourglass-split"></i> Testing...');

        console.log('🔍 Testing WhatsApp connection...');

        const response = await fetch('/admin/setting/whatsapp-test', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
        });

        const data = await response.json();
        console.log('📊 Connection Test Response:', data);

        if (data.success) {
            let statusMessage = `<div class="alert alert-success"><i class="bi bi-check-circle"></i> <strong>Koneksi WhatsApp OK!</strong>`;

            if (data.connection) {
                statusMessage += `<br>• Status: ${data.connection.status}`;
                if (data.connection.phoneNumber) {
                    statusMessage += `<br>• Nomor: ${data.connection.phoneNumber}`;
                }
                if (data.connection.connectedSince) {
                    const connectedDate = new Date(data.connection.connectedSince);
                    statusMessage += `<br>• Terhubung sejak: ${connectedDate.toLocaleString()}`;
                }
            }

            if (data.groups) {
                statusMessage += `<br>• Grup ditemukan: ${data.groups.total}`;
            }

            statusMessage += `</div>`;

            $('#waGroupsStatus').html(statusMessage);
        } else {
            $('#waGroupsStatus').html(`<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> <strong>Koneksi WhatsApp Bermasalah:</strong><br>${data.message}</div>`);
        }

    } catch (error) {
        console.error('❌ Error testing WhatsApp connection:', error);
        $('#waGroupsStatus').html(`<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> <strong>Error testing connection:</strong><br>${error.message}</div>`);
    } finally {
        $('#btnTestConnection').prop('disabled', false).html('<i class="bi bi-wifi"></i> Test Connection');
    }
}

async function loadWhatsAppGroups() {
    try {
        $('#btnLoadGroups, #btnRefreshGroups').prop('disabled', true).html('<i class="bi bi-hourglass-split"></i> Loading...');

        console.log('🔄 Loading WhatsApp groups...');

        const response = await fetch('/admin/setting/whatsapp-groups', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            }
        });

        // Check if response is OK
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }

        // Check content type
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
            // If not JSON, read as text to see what we got
            const textResponse = await response.text();
            console.error('Received non-JSON response:', textResponse.substring(0, 500));
            throw new Error('Server returned non-JSON response. Check server logs.');
        }

        const data = await response.json();
        console.log('📊 API Response:', data);

        if (data.success) {
            currentGroups = data.groups;
            displayGroups(data.groups);

            let statusMessage = `<div class="alert alert-success"><i class="bi bi-check-circle"></i> Berhasil memuat ${data.total} grup WhatsApp`;

            if (data.totalChats !== undefined) {
                statusMessage += ` dari ${data.totalChats} total chats`;
            }

            if (data.debug) {
                statusMessage += `<br><small class="text-muted">Debug: ${data.debug.chatsFound} chats ditemukan, ${data.debug.groupsFiltered} grup difilter</small>`;
            }

            statusMessage += `</div>`;

            $('#waGroupsStatus').html(statusMessage);
            $('#waGroupsList').show();
        } else {
            let errorMessage = `<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> ${data.message || 'Gagal memuat grup WhatsApp'}`;

            if (data.debug) {
                errorMessage += `<br><small class="text-muted">Debug: ${JSON.stringify(data.debug)}</small>`;
            }

            errorMessage += `</div>`;

            $('#waGroupsStatus').html(errorMessage);
            $('#waGroupsList').hide();
        }
    } catch (error) {
        console.error('❌ Error loading WhatsApp groups:', error);

        let errorMessage = error.message;
        if (error.message.includes('Unexpected token')) {
            errorMessage = 'Server mengembalikan response yang tidak valid. Pastikan WhatsApp sudah terkoneksi.';
        } else if (error.message.includes('HTTP 404')) {
            errorMessage = 'Endpoint tidak ditemukan. Pastikan aplikasi berjalan dengan benar.';
        } else if (error.message.includes('HTTP 500')) {
            errorMessage = 'Server error. Cek logs aplikasi untuk detail error.';
        } else if (error.message.includes('Failed to fetch')) {
            errorMessage = 'Tidak dapat terhubung ke server. Pastikan aplikasi berjalan.';
        }

        $('#waGroupsStatus').html(`<div class="alert alert-danger"><i class="bi bi-exclamation-triangle"></i> Error: ${errorMessage}</div>`);
        $('#waGroupsList').hide();
    } finally {
        $('#btnLoadGroups').prop('disabled', false).html('<i class="bi bi-arrow-clockwise"></i> Load Groups');
        $('#btnRefreshGroups').prop('disabled', false).html('<i class="bi bi-refresh"></i> Refresh');
    }
}

function displayGroups(groups) {
    const container = $('#groupsContainer');
    const countBadge = $('#groupsCount');

    console.log('📱 Displaying', groups.length, 'groups');

    countBadge.text(groups.length);

    if (groups.length === 0) {
        let emptyMessage = `
            <div class="p-4 text-center text-muted">
                <i class="bi bi-info-circle"></i>
                <h6>Tidak ada grup WhatsApp ditemukan</h6>
                <p class="mb-2">Kemungkinan penyebab:</p>
                <small>
                    • Bot belum ditambahkan ke grup manapun<br>
                    • Bot bukan admin di grup<br>
                    • Ada masalah dengan koneksi WhatsApp<br>
                    • Grup belum di-sync oleh WhatsApp
                </small>
                <br><br>
                <div class="alert alert-warning">
                    <i class="bi bi-lightbulb"></i> <strong>Solusi:</strong><br>
                    1. Pastikan bot sudah ditambahkan ke grup<br>
                    2. Jadikan bot sebagai admin di grup<br>
                    3. Restart aplikasi dan scan ulang QR<br>
                    4. Tunggu beberapa menit untuk sync grup
                </div>
            </div>
        `;
        container.html(emptyMessage);
        return;
    }

    let html = '<div class="list-group list-group-flush">';

    groups.forEach((group, index) => {
        const adminIcon = group.isAdmin ? '<i class="bi bi-star-fill text-warning ms-1" title="Admin"></i>' : '';
        const badgeClass = group.isAdmin ? 'bg-success' : 'bg-secondary';
        const groupId = group.id || '';

        console.log(`   Grup ${index + 1}: ${group.name} (${groupId})`);

        html += `
            <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                <div class="flex-grow-1">
                    <div class="d-flex align-items-center">
                        <strong>${group.name}</strong>${adminIcon}
                    </div>
                    <small class="text-muted">
                        <i class="bi bi-people"></i> ${group.participants} anggota |
                        <i class="bi bi-calendar"></i> ${group.created}
                    </small>
                </div>
                <div class="d-flex gap-2">
                    <button class="btn btn-sm btn-outline-primary view-group-btn"
                            data-group-id="${groupId}"
                            title="Detail Grup">
                        <i class="bi bi-eye"></i> Detail
                    </button>
                    <button class="btn btn-sm btn-outline-secondary copy-group-btn"
                            data-group-id="${groupId}"
                            title="Copy Group ID">
                        <i class="bi bi-clipboard"></i> Copy ID
                    </button>
                </div>
            </div>
        `;
    });

    html += '</div>';
    container.html(html);

    // Add event listeners after HTML is inserted
    attachGroupButtonListeners();
}

function attachGroupButtonListeners() {
    console.log('🔧 Attaching group button listeners...');

    // View Group Detail buttons
    $('.view-group-btn').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        const groupId = $(this).data('group-id');
        console.log('👁️ View button clicked for group:', groupId);
        if (groupId) {
            viewGroupDetail(groupId);
        }
    });

    // Copy Group ID buttons
    $('.copy-group-btn').on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        const groupId = $(this).data('group-id');
        console.log('📋 Copy button clicked for group:', groupId);
        if (groupId) {
            copyGroupId(groupId);
        }
    });

    console.log('✅ Group button listeners attached');
}

// View Group Detail
async function viewGroupDetail(groupId) {
    try {
        const response = await fetch(`/admin/setting/whatsapp-groups/${groupId}`);
        const data = await response.json();

        if (data.success) {
            const group = data.group;
            const participantsHtml = group.participants.map(p => `
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    ${p.id.split('@')[0]}
                    ${p.isAdmin ? '<span class="badge bg-success">Admin</span>' : ''}
                    ${p.isSuperAdmin ? '<span class="badge bg-warning">Super Admin</span>' : ''}
                </li>
            `).join('');

            const html = `
                <div class="row">
                    <div class="col-md-8">
                        <h6><i class="bi bi-info-circle"></i> Informasi Grup</h6>
                        <table class="table table-sm">
                            <tr>
                                <td><strong>Nama Grup:</strong></td>
                                <td>${group.name}</td>
                            </tr>
                            <tr>
                                <td><strong>Group ID:</strong></td>
                                <td><code>${group.id}</code></td>
                            </tr>
                            <tr>
                                <td><strong>Owner:</strong></td>
                                <td>${group.owner}</td>
                            </tr>
                            <tr>
                                <td><strong>Total Anggota:</strong></td>
                                <td>${group.totalParticipants}</td>
                            </tr>
                            <tr>
                                <td><strong>Dibuat:</strong></td>
                                <td>${group.created}</td>
                            </tr>
                            <tr>
                                <td><strong>Status Admin:</strong></td>
                                <td>${group.isAdmin ? '<span class="badge bg-success">Ya</span>' : '<span class="badge bg-secondary">Tidak</span>'}</td>
                            </tr>
                            ${group.description ? `
                            <tr>
                                <td><strong>Deskripsi:</strong></td>
                                <td>${group.description}</td>
                            </tr>
                            ` : ''}
                        </table>
                    </div>
                    <div class="col-md-4">
                        <h6><i class="bi bi-people"></i> Anggota (${group.totalParticipants})</h6>
                        <div class="border rounded p-2" style="max-height: 300px; overflow-y: auto;">
                            <ul class="list-group list-group-flush">
                                ${participantsHtml}
                            </ul>
                        </div>
                    </div>
                </div>
            `;

            $('#groupDetailContent').html(html);
            $('#btnCopyGroupId').attr('onclick', `copyGroupId('${group.id}')`);
            new bootstrap.Modal(document.getElementById('groupDetailModal')).show();
        } else {
            showNotification('danger', data.message);
        }
    } catch (error) {
        console.error('Error loading group detail:', error);
        showNotification('danger', 'Error: ' + error.message);
    }
}

// Copy Group ID
function copyGroupId(groupId) {
    console.log('📋 Copying Group ID:', groupId);

    if (!groupId || groupId.trim() === '') {
        console.error('❌ Group ID is empty');
        showNotification('danger', 'Group ID tidak valid!');
        return;
    }

    // Try modern clipboard API first
    if (navigator.clipboard && navigator.clipboard.writeText) {
        navigator.clipboard.writeText(groupId).then(() => {
            console.log('✅ Copied to clipboard using modern API');
            showNotification('success', `Group ID berhasil disalin: ${groupId.substring(0, 20)}...`);
        }).catch(err => {
            console.error('❌ Failed to copy with modern API:', err);
            fallbackCopyTextToClipboard(groupId);
        });
    } else {
        console.log('⚠️ Modern clipboard API not available, using fallback');
        fallbackCopyTextToClipboard(groupId);
    }
}

function fallbackCopyTextToClipboard(text) {
    const textArea = document.createElement('textarea');
    textArea.value = text;

    // Avoid scrolling to bottom
    textArea.style.top = '0';
    textArea.style.left = '0';
    textArea.style.position = 'fixed';
    textArea.style.opacity = '0';

    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();

    try {
        const successful = document.execCommand('copy');
        if (successful) {
            console.log('✅ Copied to clipboard using fallback method');
            showNotification('success', `Group ID berhasil disalin: ${text.substring(0, 20)}...`);
        } else {
            console.error('❌ Fallback copy failed');
            showNotification('danger', 'Gagal menyalin Group ID!');
        }
    } catch (err) {
        console.error('❌ Fallback copy error:', err);
        showNotification('danger', 'Gagal menyalin Group ID!');
    }

    document.body.removeChild(textArea);
}

// Fungsi untuk menampilkan notifikasi
function showNotification(type, message) {
    const notif = $('<div>')
        .addClass('alert alert-' + type + ' alert-dismissible fade show position-fixed top-0 end-0 m-3')
        .css('z-index', '1055')
        .html(`
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `);

    $('body').append(notif);

    // Hapus notifikasi setelah 5 detik
    setTimeout(() => {
        notif.alert('close');
    }, 5000);
}
</script>
<script>
// Optical Splitter Attenuation Calculator Logic
$(function() {
    // Standar losses
    const fiberLossPerKm = 0.35;
    const connectorLoss = 0.5;
    const spliceLoss = 0.1;

    function calcAttenuation(N) {
        return +(10 * Math.log10(N)).toFixed(2);
    }
    function getTotalLoss() {
        const fiberLength = parseFloat($('#fiberLength').val()) || 0;
        const connectorCount = parseInt($('#connectorCount').val()) || 0;
        const spliceCount = parseInt($('#spliceCount').val()) || 0;
        const margin = parseFloat($('#margin').val()) || 0;
        return +(fiberLength * fiberLossPerKm + connectorCount * connectorLoss + spliceCount * spliceLoss + margin).toFixed(2);
    }
    function updateSplitterCalc() {
        const rxAwal = parseFloat($('#rxAwal').val());
        const ratio = parseInt($('#splitterRatio').val());
        if (isNaN(rxAwal) || isNaN(ratio)) {
            $('#splitterAttenuation').val('');
            $('#rxSetelahSplitter').val('');
            return false;
        }
        const att = calcAttenuation(ratio);
        const totalLoss = getTotalLoss();
        const rxAfter = +(rxAwal - att - totalLoss).toFixed(2);
        $('#splitterAttenuation').val((att + totalLoss).toFixed(2));
        $('#rxSetelahSplitter').val(rxAfter);
        return true;
    }
    function updateSplitterTable() {
        const rxAwal = parseFloat($('#rxAwal').val());
        const fiberLength = parseFloat($('#fiberLength').val()) || 0;
        const connectorCount = parseInt($('#connectorCount').val()) || 0;
        const spliceCount = parseInt($('#spliceCount').val()) || 0;
        const margin = parseFloat($('#margin').val()) || 0;
        const ratios = [2,4,8,16,32,64];
        let html = '';
        ratios.forEach(function(r) {
            const att = calcAttenuation(r);
            const totalLoss = fiberLength * fiberLossPerKm + connectorCount * connectorLoss + spliceCount * spliceLoss + margin;
            let rxAfter = '';
            if (!isNaN(rxAwal)) rxAfter = (rxAwal - att - totalLoss).toFixed(2);
            html += `<tr><td>1:${r}</td><td>${(att + totalLoss).toFixed(2)}</td><td>${rxAfter}</td></tr>`;
        });
        $('#splitterTableBody').html(html);
    }
    // Hide result section by default
    $('#splitterResultSection').hide();
    // Only generate on button click
    $('#generateSplitterResult').on('click', function() {
        const valid = updateSplitterCalc();
        if (valid) {
            updateSplitterTable();
            $('#splitterResultSection').slideDown();
        } else {
            $('#splitterResultSection').slideUp();
        }
    });
});
</script>
<script>
// Fungsi untuk download file
function downloadScript(filename, content) {
    const element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));
    element.setAttribute('download', filename);
    element.style.display = 'none';
    document.body.appendChild(element);
    element.click();
    document.body.removeChild(element);
}

// VPS & MikroTik Configuration Generator
function generateVpsScript() {
    const vpsIp = $('#vpsPublicIp').val().trim();
    const vpsInterface = $('#vpsInterface').val().trim();
    const wgPort = $('#wgPort').val().trim();
    const vpsLocalIp = $('#vpsLocalIp').val().trim();
    const networkSubnet = $('#networkSubnet').val().trim();
    
    if (!vpsIp || !vpsInterface || !wgPort || !vpsLocalIp || !networkSubnet) {
        alert('Harap isi semua field yang diperlukan');
        return;
    }

    const script = `#!/bin/bash
# ===========================================
# Script Konfigurasi VPS untuk WireGuard
# ===========================================

# Update sistem
echo "Mengupdate sistem..."
sudo apt update && sudo apt upgrade -y

# Install paket yang diperlukan
echo "Menginstall paket yang diperlukan..."
sudo apt install -y wireguard net-tools iputils-ping

# Generate key
echo "Membuat kunci WireGuard..."
umask 077
wg genkey | sudo tee /etc/wireguard/private.key
sudo cat /etc/wireguard/private.key | wg pubkey | sudo tee /etc/wireguard/public.key

# Buat konfigurasi WireGuard
echo "Membuat konfigurasi WireGuard..."
sudo cat > /etc/wireguard/wg0.conf <<EOL
[Interface]
Address = ${vpsLocalIp}/24
SaveConfig = true
ListenPort = ${wgPort}
PrivateKey = $(sudo cat /etc/wireguard/private.key)
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o ${vpsInterface} -j MASQUERADE
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o ${vpsInterface} -j MASQUERADE
EOL

# Aktifkan IP forwarding
echo "Mengaktifkan IP forwarding..."
echo "net.ipv4.ip_forward=1" | sudo tee -a /etc/sysctl.conf
sudo sysctl -p

# Konfigurasi firewall
echo "Mengkonfigurasi firewall..."
sudo ufw allow 22/tcp
sudo ufw allow ${wgPort}/udp

# Konfigurasi NAT untuk WireGuard
sudo sed -i '/^\*filter$/i *nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s ${networkSubnet} -o ${vpsInterface} -j MASQUERADE\nCOMMIT\n' /etc/ufw/before.rules

# Aktifkan firewall
sudo ufw enable

# Start WireGuard
echo "Menjalankan WireGuard..."
sudo systemctl enable --now wg-quick@wg0

echo "\n==========================================="
echo "Konfigurasi VPS selesai!"
echo "Gunakan public key berikut untuk konfigurasi MikroTik:"
sudo cat /etc/wireguard/public.key
echo "\n==========================================="`;

    $('#generatedScript').text(script);
    return script;
}

function generateMikrotikScript() {
    const vpsIp = $('#vpsPublicIp').val().trim();
    const wgPort = $('#wgPort').val().trim();
    const mikrotikLocalIp = $('#mikrotikLocalIp').val().trim();
    const vpsLocalIp = $('#vpsLocalIp').val().trim();
    const networkSubnet = $('#networkSubnet').val().trim();
    
    if (!vpsIp || !wgPort || !mikrotikLocalIp || !vpsLocalIp || !networkSubnet) {
        alert('Harap isi semua field yang diperlukan');
        return;
    }

    const script = `# ===========================================
# Script Konfigurasi MikroTik untuk WireGuard
# ===========================================

# Generate key pair
:local privateKey ""
:local publicKey ""
/interface wireguard keypair \
    private-key=private.key public-key=public.key
:set privateKey [:parse [/file get private.key contents]]
:set publicKey [:parse [/file get public.key contents]]
/file remove public.key private.key

# Buat interface WireGuard
/interface wireguard add \
    name=wg-vps \
    private-key=$privateKey \
    listen-port=${wgPort}

# Tambahkan peer (VPS)
/interface wireguard peers add \
    interface=wg-vps \
    public-key="<MASUKKAN_PUBLIC_KEY_VPS>" \
    allowed-address=${vpsLocalIp}/32 \
    endpoint-address=${vpsIp} \
    endpoint-port=${wgPort}

# Atur IP lokal
/ip address add \
    address=${mikrotikLocalIp}/24 \
    interface=wg-vps

# Tambahkan rute ke VPS
/ip route add \
    dst-address=${vpsLocalIp}/32 \
    gateway=wg-vps

# Tambahkan rute ke jaringan lokal VPS (jika ada)
/ip route add \
    dst-address=${networkSubnet} \
    gateway=wg-vps

# Konfigurasi NAT (jika diperlukan)
/ip firewall nat add \
    chain=srcnat \
    out-interface=wg-vps \
    action=masquerade

# Konfigurasi DHCP Option 43 untuk GenieACS
:local genieAcsUrl "http://${vpsLocalIp}:7547"
:local urlHex [:pick [/tool fetch url="http://text-processing.com/encode/raw/" \
    http-method=post \
    http-data="text=$genieAcsUrl&encode=hex&charset=utf-8" \
    as-value output=user] 1]
:local urlLen [:len $urlHex]
:local option43 "01$[:pick $urlHex 0 2]$[:pick $urlHex 2 $urlLen]"

/ip dhcp-server option add name=opt43 code=43 value="0x$option43"
/ip dhcp-server network set numbers=0 dhcp-option=opt43

:put "==========================================="
:put "Konfigurasi MikroTik selesai!"
:put "Gunakan public key ini di VPS:"
:put $publicKey
:put "\n==========================================="`;

    $('#generatedScript').text(script);
    return script;
}

// Event Listeners
let currentVpsScript = '';
let currentMikrotikScript = '';
    
$('#generateVpsScript').on('click', function() {
    currentVpsScript = generateVpsScript();
    $('#downloadVpsScript').prop('disabled', false);
});
    
$('#generateMikrotikScript').on('click', function() {
    currentMikrotikScript = generateMikrotikScript();
    $('#downloadMikrotikScript').prop('disabled', false);
});
    
$('#downloadVpsScript').on('click', function() {
    if (currentVpsScript) {
        downloadScript('vps-wireguard-setup.sh', currentVpsScript);
    }
});
    
$('#downloadMikrotikScript').on('click', function() {
    if (currentMikrotikScript) {
        downloadScript('mikrotik-wireguard-setup.rsc', currentMikrotikScript);
    }
});
</script>

<!-- Backup & Restore Section -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">
                    <i class="mdi mdi-database-backup me-2"></i>
                    Backup & Restore Database
                </h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="card border-primary">
                            <div class="card-header bg-primary text-white">
                                <h5 class="card-title mb-0">
                                    <i class="mdi mdi-download me-2"></i>
                                    Backup Database
                                </h5>
                            </div>
                            <div class="card-body">
                                <p class="text-muted">
                                    Buat backup database billing untuk keamanan data.
                                </p>
                                <button type="button" class="btn btn-primary" id="createBackupBtn">
                                    <i class="mdi mdi-download me-2"></i>
                                    Buat Backup
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="card border-warning">
                            <div class="card-header bg-warning text-white">
                                <h5 class="card-title mb-0">
                                    <i class="mdi mdi-upload me-2"></i>
                                    Restore Database
                                </h5>
                            </div>
                            <div class="card-body">
                                <p class="text-muted">
                                    Restore database dari file backup yang tersedia.
                                </p>
                                <div class="mb-3">
                                    <label for="backupFile" class="form-label">Pilih File Backup:</label>
                                    <select class="form-select" id="backupFile">
                                        <option value="">Pilih file backup...</option>
                                    </select>
                                </div>
                                <button type="button" class="btn btn-warning" id="restoreBackupBtn" disabled>
                                    <i class="mdi mdi-upload me-2"></i>
                                    Restore Database
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title mb-0">
                                    <i class="mdi mdi-history me-2"></i>
                                    Riwayat Backup
                                </h5>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive">
                                    <table class="table table-hover" id="backupTable">
                                        <thead>
                                            <tr>
                                                <th>Nama File</th>
                                                <th>Ukuran</th>
                                                <th>Tanggal Dibuat</th>
                                                <th>Aksi</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td colspan="4" class="text-center text-muted">
                                                    <i class="mdi mdi-loading mdi-spin me-2"></i>
                                                    Memuat data backup...
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
$(function() {
  $(document).on('click', '#restartMikrotikBtn', function(e) {
    e.preventDefault();
    $('#restartMikrotikModal').modal('show');
  });
  $('#confirmRestartMikrotik').on('click', function() {
    $('#restartMikrotikModal').modal('hide');
    $.ajax({
      url: '/admin/mikrotik/restart',
      method: 'POST',
      success: function(res) {
        let notif = $('#restartNotif');
        if(res.success) {
          notif.removeClass('d-none alert-danger').addClass('alert-success').text(res.message || 'Mikrotik berhasil direstart!');
        } else {
          notif.removeClass('d-none alert-success').addClass('alert-danger').text(res.message || 'Gagal restart Mikrotik!');
        }
        setTimeout(function() { notif.addClass('d-none'); }, 4000);
      },
      error: function() {
        let notif = $('#restartNotif');
        notif.removeClass('d-none alert-success').addClass('alert-danger').text('Gagal menghubungi server!');
        setTimeout(function() { notif.addClass('d-none'); }, 4000);
      }
    });
      });
});

// Backup & Restore Functions
$(document).ready(function() {
    // Load backup files on page load
    loadBackupFiles();
    
    // Create backup
    $('#createBackupBtn').on('click', function() {
        const btn = $(this);
        const originalText = btn.html();
        
        btn.prop('disabled', true).html('<i class="mdi mdi-loading mdi-spin me-2"></i>Membuat backup...');
        
        $.ajax({
            url: '/admin/setting/backup',
            method: 'POST',
            success: function(response) {
                if (response.success) {
                    showNotification('success', response.message);
                    loadBackupFiles(); // Reload backup list
                } else {
                    showNotification('danger', response.message || 'Gagal membuat backup');
                }
            },
            error: function(xhr) {
                const errorMsg = xhr.responseJSON?.message || 'Terjadi kesalahan saat membuat backup';
                showNotification('danger', errorMsg);
            },
            complete: function() {
                btn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    // Restore backup
    $('#restoreBackupBtn').on('click', function() {
        const selectedFile = $('#backupFile').val();
        
        if (!selectedFile) {
            showNotification('warning', 'Pilih file backup terlebih dahulu');
            return;
        }
        
        if (!confirm('⚠️ PERHATIAN!\n\nRestore database akan mengganti semua data saat ini dengan data dari backup.\n\nData yang ada saat ini akan hilang!\n\nLanjutkan restore?')) {
            return;
        }
        
        const btn = $(this);
        const originalText = btn.html();
        
        btn.prop('disabled', true).html('<i class="mdi mdi-loading mdi-spin me-2"></i>Restoring...');
        
        // Create form data for file upload
        const formData = new FormData();
        formData.append('backup_file', selectedFile);
        
        $.ajax({
            url: '/admin/setting/restore',
            method: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                if (response.success) {
                    showNotification('success', response.message + '\nHalaman akan dimuat ulang...');
                    setTimeout(() => {
                        window.location.reload();
                    }, 2000);
                } else {
                    showNotification('danger', response.message || 'Gagal restore database');
                }
            },
            error: function(xhr) {
                const errorMsg = xhr.responseJSON?.message || 'Terjadi kesalahan saat restore';
                showNotification('danger', errorMsg);
            },
            complete: function() {
                btn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    // Enable/disable restore button based on file selection
    $('#backupFile').on('change', function() {
        $('#restoreBackupBtn').prop('disabled', !$(this).val());
    });
    
    function loadBackupFiles() {
        $.ajax({
            url: '/admin/setting/backups',
            method: 'GET',
            success: function(response) {
                if (response.success) {
                    updateBackupTable(response.backups);
                    updateBackupSelect(response.backups);
                } else {
                    showNotification('danger', 'Gagal memuat daftar backup');
                }
            },
            error: function() {
                showNotification('danger', 'Terjadi kesalahan saat memuat daftar backup');
            }
        });
    }
    
    function updateBackupTable(backups) {
        const tbody = $('#backupTable tbody');
        tbody.empty();
        
        if (backups.length === 0) {
            tbody.append(`
                <tr>
                    <td colspan="4" class="text-center text-muted">
                        <i class="mdi mdi-database-off me-2"></i>
                        Belum ada file backup
                    </td>
                </tr>
            `);
            return;
        }
        
        backups.forEach(backup => {
            const size = formatFileSize(backup.size);
            const date = new Date(backup.created).toLocaleString('id-ID');
            
            tbody.append(`
                <tr>
                    <td><i class="mdi mdi-database me-2"></i>${backup.filename}</td>
                    <td>${size}</td>
                    <td>${date}</td>
                    <td>
                        <button class="btn btn-sm btn-warning restore-file-btn" data-file="${backup.filename}">
                            <i class="mdi mdi-upload"></i> Restore
                        </button>
                    </td>
                </tr>
            `);
        });
    }
    
    function updateBackupSelect(backups) {
        const select = $('#backupFile');
        select.empty().append('<option value="">Pilih file backup...</option>');
        
        backups.forEach(backup => {
            select.append(`<option value="${backup.filename}">${backup.filename}</option>`);
        });
    }
    
    function formatFileSize(bytes) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    }
    
    // Handle restore from table
    $(document).on('click', '.restore-file-btn', function() {
        const filename = $(this).data('file');
        $('#backupFile').val(filename);
        $('#restoreBackupBtn').click();
    });
});
</script>

<!-- Activity Logs Section -->
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h4 class="card-title">
                    <i class="mdi mdi-history me-2"></i>
                    Activity Logs
                </h4>
                <div>
                    <button type="button" class="btn btn-warning btn-sm" id="clearLogsBtn">
                        <i class="mdi mdi-delete me-2"></i>
                        Clear Old Logs
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover" id="activityLogsTable">
                        <thead>
                            <tr>
                                <th>Waktu</th>
                                <th>User</th>
                                <th>Tipe</th>
                                <th>Aksi</th>
                                <th>Deskripsi</th>
                                <th>IP Address</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="6" class="text-center text-muted">
                                    <i class="mdi mdi-loading mdi-spin me-2"></i>
                                    Memuat activity logs...
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div>
                        <button type="button" class="btn btn-outline-primary btn-sm" id="loadMoreLogsBtn">
                            <i class="mdi mdi-refresh me-2"></i>
                            Load More
                        </button>
                    </div>
                    <div class="text-muted">
                        <small>Showing <span id="logsCount">0</span> logs</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
$(document).ready(function() {
    // 1. Handle Logo Upload
    $('#logoUploadForm').on('submit', function(e) {
        e.preventDefault();
        
        var formData = new FormData(this);
        var submitButton = $(this).find('button[type="submit"]');
        var originalButtonText = submitButton.html();
        
        // Disable button dan tampilkan loading
        submitButton.prop('disabled', true).html('<i class="bi bi-upload"></i> Uploading...');
        
        $.ajax({
            url: '/admin/setting/upload-logo',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function(response) {
                if (response.success) {
                    // Tampilkan notifikasi sukses
                    showNotification('success', 'Logo berhasil diupload!');
                    
                    // Update logo preview secara real-time
                    updateLogoPreview(response.filename);
                    
                    // Reset form
                    $('#logoUploadForm')[0].reset();
                    
                } else {
                    showNotification('danger', response.error || 'Gagal mengupload logo');
                }
            },
            error: function(xhr, status, error) {
                console.error('Error uploading logo:', error);
                var errorMsg = 'Terjadi kesalahan saat mengupload logo';
                if (xhr.responseJSON && xhr.responseJSON.error) {
                    errorMsg = xhr.responseJSON.error;
                }
                showNotification('danger', errorMsg);
            },
            complete: function() {
                // Restore button state
                submitButton.prop('disabled', false).html(originalButtonText);
            }
        });
    });
    
    // Function to update logo preview
    function updateLogoPreview(filename) {
        const timestamp = new Date().getTime();
        const newSrc = `/img/${filename}?v=${timestamp}`;
        
        // Update logo preview di halaman setting
        $('#logoPreview').attr('src', newSrc);
        
        // Update logo di sidebar (responsive dan normal)
        const sidebarLogos = $('.sidebar-header img, #logoImage, .sidebar img[alt="Logo"]');
        if (sidebarLogos.length > 0) {
            sidebarLogos.attr('src', newSrc);
        }
        
        // Update logo di navbar mobile (admin-responsive-sidebar)
        const navbarLogo = $('.navbar img[alt="Logo"], .navbar-brand img');
        if (navbarLogo.length > 0) {
            navbarLogo.attr('src', newSrc);
        }
        
        // Update logo di semua partials lainnya
        const allLogos = $('img[alt="Logo"], img[src*="logo"]');
        allLogos.each(function() {
            const currentSrc = $(this).attr('src');
            if (currentSrc && (currentSrc.includes('/img/logo') || currentSrc.includes('logo.'))) {
                $(this).attr('src', newSrc);
            }
        });
        
        console.log('Logo preview updated:', newSrc);
        console.log('Updated logo elements:', sidebarLogos.length + navbarLogo.length + allLogos.length);
    }

    // 2. Handle DHCP Option 43 Generator
    $('#generateOption43').on('click', function() {
        const url = $('#genieacsUrl').val().trim();
        
        if (!url) {
            showNotification('warning', 'Masukkan URL GenieACS terlebih dahulu');
            return;
        }
        
        try {
            // Format URL untuk DHCP Option 43
            // Format: 01<panjang url dalam hex><url dalam hex>
            const urlHex = stringToHex(url);
            const urlLenHex = (urlHex.length / 2).toString(16).padStart(2, '0');
            const option43 = '01' + urlLenHex + urlHex;
            
            // Tampilkan hasil
            $('#option43Result').val(option43);
            $('#option43Value').text(option43);
            
            // Sembunyikan notifikasi error jika ada
            $('#option43Error').addClass('d-none');
        } catch (e) {
            console.error('Error generating Option 43:', e);
            $('#option43Error').removeClass('d-none').text('Gagal menghasilkan Option 43: ' + e.message);
        }
    });

    // Fungsi untuk menyalin teks ke clipboard
    $('#copyOption43Btn').on('click', function() {
        const copyText = document.getElementById("option43Result");
        copyText.select();
        copyText.setSelectionRange(0, 99999); // Untuk mobile
        document.execCommand("copy");
        showNotification('success', 'Tersalin ke clipboard!');
    });

    // Fungsi bantu: Konversi string ke hex
    function stringToHex(str) {
        let hex = '';
        for (let i = 0; i < str.length; i++) {
            hex += str.charCodeAt(i).toString(16).padStart(2, '0');
        }
        return hex;
    }

    // Fungsi untuk menampilkan notifikasi
    function showNotification(type, message) {
        const notif = $('<div>')
            .addClass('alert alert-' + type + ' alert-dismissible fade show position-fixed top-0 end-0 m-3')
            .css('z-index', '1055')
            .html(`
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `);
        
        $('body').append(notif);
        
        // Hapus notifikasi setelah 5 detik
        setTimeout(() => {
            notif.alert('close');
        }, 5000);
    }
});
</script>
<script>
$(document).ready(function() {
    // 1. Handle Burst Limit Calculator
    $('#generateBurstLimit').on('click', function() {
        // Ambil nilai input
        const uploadRate = $('#uploadRate').val();
        const uploadUnit = $('#uploadUnit').val();
        const downloadRate = $('#downloadRate').val();
        const downloadUnit = $('#downloadUnit').val();
        const uploadBurstRate = $('#uploadBurstRate').val();
        const uploadBurstUnit = $('#uploadBurstUnit').val();
        const downloadBurstRate = $('#downloadBurstRate').val();
        const downloadBurstUnit = $('#downloadBurstUnit').val();
        const burstTime = $('#burstTime').val() || '8';

        // Validasi input
        if (!uploadRate || !downloadRate || !uploadBurstRate || !downloadBurstRate) {
            showNotification('warning', 'Harap isi semua field yang diperlukan');
            return;
        }

        // Format rate limit
        const formatRate = (rate, unit) => {
            if (unit === 'M') {
                return `${rate}M`;
            } else {
                return rate === '0' ? '0' : `${rate}K`;
            }
        };

        // Format burst limit
        const formatBurst = (rate, unit, burstRate, burstUnit) => {
            if (rate === '0') return '0/0';
            
            const rateValue = parseInt(rate);
            const burstValue = parseInt(burstRate);
            let rateKbps = unit === 'M' ? rateValue * 1000 : rateValue;
            let burstKbps = burstUnit === 'M' ? burstValue * 1000 : burstValue;
            
            // Hitung burst threshold (50-75% dari burst rate)
            const threshold = Math.max(
                Math.min(Math.ceil(burstKbps * 0.75), burstKbps - 1),
                Math.ceil(burstKbps * 0.5)
            );
            
            return `${burstKbps}K/${threshold}K ${burstTime}`;
        };

        // Generate hasil
        const uploadLimit = formatRate(uploadRate, uploadUnit);
        const downloadLimit = formatRate(downloadRate, downloadUnit);
        const uploadBurst = formatBurst(uploadRate, uploadUnit, uploadBurstRate, uploadBurstUnit);
        const downloadBurst = formatBurst(downloadRate, downloadUnit, downloadBurstRate, downloadBurstUnit);

        // Format hasil untuk MikroTik
        const result = 
`/ip hotspot user profile set [find name="NamaProfil"] \
    rate-limit="${uploadLimit}/${downloadLimit}" \
    burst-limit="${uploadBurst}/${downloadBurst}" \
    burst-threshold=0/0 \
    burst-time=0s/0s`;

        // Tampilkan hasil
        $('#burstResult').val(result);
        
        // Scroll ke hasil
        $('html, body').animate({
            scrollTop: $('#burstResult').offset().top - 100
        }, 500);
    });

    // 2. Handle Copy to Clipboard
    $('#copyBurstBtn').on('click', function() {
        const copyText = document.getElementById("burstResult");
        copyText.select();
        copyText.setSelectionRange(0, 99999);
        document.execCommand("copy");
        showNotification('success', 'Berhasil disalin ke clipboard!');
    });
});

// Activity Logs Functions
$(document).ready(function() {
    let currentPage = 1;
    let totalLogs = 0;
    
    // Load activity logs on page load
    loadActivityLogs();
    
    // Load more logs
    $('#loadMoreLogsBtn').on('click', function() {
        currentPage++;
        loadActivityLogs(currentPage);
    });
    
    // Clear old logs
    $('#clearLogsBtn').on('click', function() {
        if (!confirm('⚠️ PERHATIAN!\n\nIni akan menghapus semua activity logs yang lebih dari 30 hari.\n\nLanjutkan?')) {
            return;
        }
        
        const btn = $(this);
        const originalText = btn.html();
        
        btn.prop('disabled', true).html('<i class="mdi mdi-loading mdi-spin me-2"></i>Clearing...');
        
        $.ajax({
            url: '/admin/setting/clear-logs',
            method: 'POST',
            data: { days: 30 },
            success: function(response) {
                if (response.success) {
                    showNotification('success', response.message);
                    currentPage = 1;
                    loadActivityLogs(1);
                } else {
                    showNotification('danger', response.message || 'Gagal clear logs');
                }
            },
            error: function(xhr) {
                const errorMsg = xhr.responseJSON?.message || 'Terjadi kesalahan saat clear logs';
                showNotification('danger', errorMsg);
            },
            complete: function() {
                btn.prop('disabled', false).html(originalText);
            }
        });
    });
    
    function loadActivityLogs(page = 1) {
        $.ajax({
            url: '/admin/setting/activity-logs',
            method: 'GET',
            data: { page: page, limit: 50 },
            success: function(response) {
                if (response.success) {
                    if (page === 1) {
                        updateActivityLogsTable(response.logs);
                    } else {
                        appendActivityLogsTable(response.logs);
                    }
                    totalLogs += response.logs.length;
                    $('#logsCount').text(totalLogs);
                } else {
                    showNotification('danger', 'Gagal memuat activity logs');
                }
            },
            error: function() {
                showNotification('danger', 'Terjadi kesalahan saat memuat activity logs');
            }
        });
    }
    
    function updateActivityLogsTable(logs) {
        const tbody = $('#activityLogsTable tbody');
        tbody.empty();
        
        if (logs.length === 0) {
            tbody.append(`
                <tr>
                    <td colspan="6" class="text-center text-muted">
                        <i class="mdi mdi-history-off me-2"></i>
                        Belum ada activity logs
                    </td>
                </tr>
            `);
            return;
        }
        
        logs.forEach(log => {
            const date = new Date(log.created_at).toLocaleString('id-ID');
            const userType = log.user_type === 'admin' ? 'Admin' : 'Customer';
            
            tbody.append(`
                <tr>
                    <td><small>${date}</small></td>
                    <td><strong>${log.user_id || '-'}</strong></td>
                    <td><span class="badge bg-${log.user_type === 'admin' ? 'primary' : 'info'}">${userType}</span></td>
                    <td><code>${log.action}</code></td>
                    <td>${log.description}</td>
                    <td><small>${log.ip_address || '-'}</small></td>
                </tr>
            `);
        });
    }
    
    function appendActivityLogsTable(logs) {
        const tbody = $('#activityLogsTable tbody');
        
        logs.forEach(log => {
            const date = new Date(log.created_at).toLocaleString('id-ID');
            const userType = log.user_type === 'admin' ? 'Admin' : 'Customer';
            
            tbody.append(`
                <tr>
                    <td><small>${date}</small></td>
                    <td><strong>${log.user_id || '-'}</strong></td>
                    <td><span class="badge bg-${log.user_type === 'admin' ? 'primary' : 'info'}">${userType}</span></td>
                    <td><code>${log.action}</code></td>
                    <td>${log.description}</td>
                    <td><small>${log.ip_address || '-'}</small></td>
                </tr>
            `);
        });
    }
});
</script>

</body>
</html>