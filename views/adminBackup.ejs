<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Gembok Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/css/dark-theme.css" rel="stylesheet">
    <link href="/css/theme-unify.css" rel="stylesheet">
    <link href="/css/widgets.css" rel="stylesheet">
    <style>
        .backup-item {
            border: 1px solid #dee2e6;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 0.5rem;
            transition: all 0.3s ease;
        }
        .backup-item:hover {
            box-shadow: 0 3px 10px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }
        .status-badge {
            font-size: 0.8rem;
            padding: 0.25rem 0.5rem;
        }
        .backup-actions {
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        .backup-item:hover .backup-actions {
            opacity: 1;
        }
        .progress-ring {
            width: 60px;
            height: 60px;
        }
        .progress-ring circle {
            fill: transparent;
            stroke: #007bff;
            stroke-width: 4;
            stroke-linecap: round;
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
        }
    </style>
</head>
<body>
    <%- include('partials/admin-header') %>
    
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <a href="/admin/dashboard" class="btn btn-outline-secondary btn-sm mb-2">
                            <i class="fas fa-arrow-left me-1"></i>Kembali ke Dashboard
                        </a>
                        <h2 class="mb-0"><i class="fas fa-database me-2"></i>Backup Management</h2>
                    </div>
                    <div>
                        <button class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#createBackupModal">
                            <i class="fas fa-plus me-1"></i>Create Backup
                        </button>
                        <button class="btn btn-outline-secondary" onclick="refreshBackups()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Status Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card stats-card backup-total">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="card-title">Total Backups</h6>
                                <h3 class="mb-0"><%= status.totalBackups %></h3>
                            </div>
                            <i class="fas fa-archive fa-2x opacity-50"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stats-card backup-auto">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="card-title">Auto Backup</h6>
                                <h6 class="mb-0">
                                    <% if (status.isRunning) { %>
                                        <span class="badge bg-light text-success">Running</span>
                                    <% } else { %>
                                        <span class="badge bg-light text-danger">Stopped</span>
                                    <% } %>
                                </h6>
                            </div>
                            <i class="fas fa-clock fa-2x opacity-50"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stats-card backup-storage">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="card-title">Max Backups</h6>
                                <h3 class="mb-0"><%= status.maxBackups %></h3>
                            </div>
                            <i class="fas fa-hdd fa-2x opacity-50"></i>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stats-card backup-schedule">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h6 class="card-title">Next Backup</h6>
                                <h6 class="mb-0">
                                    <% if (status.nextBackup) { %>
                                        <%= new Date(status.nextBackup).toLocaleString('id-ID') %>
                                    <% } else { %>
                                        Not scheduled
                                    <% } %>
                                </h6>
                            </div>
                            <i class="fas fa-calendar fa-2x opacity-50"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Backup List -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5><i class="fas fa-list me-2"></i>Backup List</h5>
                        <div>
                            <button class="btn btn-sm btn-outline-success me-2" onclick="startAutoBackup()">
                                <i class="fas fa-play me-1"></i>Start Auto
                            </button>
                            <button class="btn btn-sm btn-outline-danger" onclick="stopAutoBackup()">
                                <i class="fas fa-stop me-1"></i>Stop Auto
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <% if (backups.length === 0) { %>
                            <div class="text-center py-5">
                                <i class="fas fa-archive fa-3x text-muted mb-3"></i>
                                <h5 class="text-muted">No backups found</h5>
                                <p class="text-muted">Create your first backup to get started</p>
                            </div>
                        <% } else { %>
                            <div class="row">
                                <% backups.forEach((backup, index) => { %>
                                <div class="col-md-6 col-lg-4 mb-3">
                                    <div class="backup-item">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <div>
                                                <h6 class="mb-1"><%= backup.name %></h6>
                                                <small class="text-muted">
                                                    <i class="fas fa-calendar me-1"></i>
                                                    <%= new Date(backup.created).toLocaleString('id-ID') %>
                                                </small>
                                            </div>
                                            <div class="backup-actions">
                                                <div class="btn-group btn-group-sm">
                                                    <button class="btn btn-outline-primary" onclick="restoreBackup('<%= backup.name %>')" title="Restore">
                                                        <i class="fas fa-undo"></i>
                                                    </button>
                                                    <button class="btn btn-outline-info" onclick="downloadBackup('<%= backup.name %>')" title="Download">
                                                        <i class="fas fa-download"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger" onclick="deleteBackup('<%= backup.name %>')" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <% if (backup.metadata) { %>
                                        <div class="mt-2">
                                            <small class="text-muted">
                                                <i class="fas fa-files me-1"></i>
                                                <%= backup.metadata.files ? backup.metadata.files.length : 0 %> files
                                            </small>
                                            <% if (backup.metadata.successCount !== undefined) { %>
                                            <br>
                                            <small class="text-success">
                                                <i class="fas fa-check me-1"></i>
                                                <%= backup.metadata.successCount %> successful
                                            </small>
                                            <% if (backup.metadata.errorCount > 0) { %>
                                            <small class="text-danger ms-2">
                                                <i class="fas fa-exclamation-triangle me-1"></i>
                                                <%= backup.metadata.errorCount %> errors
                                            </small>
                                            <% } %>
                                            <% } %>
                                        </div>
                                        <% } %>
                                    </div>
                                </div>
                                <% }); %>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Backup Modal -->
    <div class="modal fade" id="createBackupModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Backup</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createBackupForm">
                        <div class="mb-3">
                            <label for="backupName" class="form-label">Backup Name (Optional)</label>
                            <input type="text" class="form-control" id="backupName" placeholder="Leave empty for auto-generated name">
                            <div class="form-text">If empty, will use timestamp-based name</div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="createBackup()">
                        <i class="fas fa-plus me-1"></i>Create Backup
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Create Backup
        function createBackup() {
            const backupName = document.getElementById('backupName').value;
            
            fetch('/admin/backup/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ backupName: backupName || null })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Backup created successfully!');
                    location.reload();
                } else {
                    alert('Error creating backup: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error creating backup');
            });
        }

        // Restore Backup
        function restoreBackup(backupName) {
            if (!confirm(`Are you sure you want to restore backup "${backupName}"? This will overwrite current data.`)) {
                return;
            }

            fetch('/admin/backup/restore', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ backupName })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Backup restored successfully!');
                    location.reload();
                } else {
                    alert('Error restoring backup: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error restoring backup');
            });
        }

        // Delete Backup
        function deleteBackup(backupName) {
            if (!confirm(`Are you sure you want to delete backup "${backupName}"? This action cannot be undone.`)) {
                return;
            }

            fetch(`/admin/backup/${encodeURIComponent(backupName)}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Backup deleted successfully!');
                    location.reload();
                } else {
                    alert('Error deleting backup: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting backup');
            });
        }

        // Download Backup
        function downloadBackup(backupName) {
            alert('Download feature not implemented yet. Backup location: /backups/' + backupName);
        }

        // Start Auto Backup
        function startAutoBackup() {
            fetch('/admin/backup/automatic', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ action: 'start' })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Automatic backup started!');
                    location.reload();
                } else {
                    alert('Error starting automatic backup: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error starting automatic backup');
            });
        }

        // Stop Auto Backup
        function stopAutoBackup() {
            fetch('/admin/backup/automatic', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ action: 'stop' })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Automatic backup stopped!');
                    location.reload();
                } else {
                    alert('Error stopping automatic backup: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error stopping automatic backup');
            });
        }

        // Refresh Backups
        function refreshBackups() {
            location.reload();
        }
    </script>
</body>
</html>
